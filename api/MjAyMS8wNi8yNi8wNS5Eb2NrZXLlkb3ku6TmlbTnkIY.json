{"title":"Docker 命令","date":"2021-06-26T01:05:06.795Z","date_formatted":{"ll":"Jun 26, 2021","L":"06/26/2021","MM-DD":"06-26"},"link":"2021/06/26/05.Docker命令整理","comments":true,"tags":["Docker"],"categories":["Docker"],"updated":"2021-06-25T17:05:06.795Z","content":"<span id=\"more\"></span>\n<h4 id=\"查看docker信息（version、info）\">查看docker信息（version、info）<a title=\"#查看docker信息（version、info）\" href=\"#查看docker信息（version、info）\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看docker版本 </span><br><span class=\"line\">docker version </span><br><span class=\"line\"></span><br><span class=\"line\"># 显示docker系统的信息 </span><br><span class=\"line\">docker info</span><br></pre></td></tr></table></figure>\n<h4 id=\"对image的操作（search、pull、images、rmi、history）\">对image的操作（search、pull、images、rmi、history）<a title=\"#对image的操作（search、pull、images、rmi、history）\" href=\"#对image的操作（search、pull、images、rmi、history）\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 检索image </span><br><span class=\"line\">docker search image_name</span><br><span class=\"line\"></span><br><span class=\"line\"># 下载image </span><br><span class=\"line\">docker pull image_name </span><br><span class=\"line\">#列出镜像列表; -a, --all=false Show all images; --no-trunc=false Don&#x27;t truncate output; -q, --quiet=false Only show numeric IDs </span><br><span class=\"line\">docker images</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除一个或者多个镜像; -f, --force=false Force; --no-prune=false Do not delete untagged parents </span><br><span class=\"line\">docker rmi image_name</span><br><span class=\"line\"> </span><br><span class=\"line\"># 显示一个镜像的历史; --no-trunc=false Don&#x27;t truncate output; -q, --quiet=false Only show numeric IDs </span><br><span class=\"line\">docker history image_id</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动容器（run）\">启动容器（run）<a title=\"#启动容器（run）\" href=\"#启动容器（run）\"></a></h4>\n<p>docker容器可以理解为在沙盒中运行的进程。这个沙盒包 含了该进程运行所必须的资源，包括文件系统、系统类库、shell 环境等等。但这个沙盒默认是不会运行任何程序的。你需要在沙盒中运行一个进程来启动某一个容器。这个进程是该容器的唯一进程，所以当该进程结束的时候，容 器也会完全的停止。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 在容器中运行&quot;echo&quot;命令，输出&quot;hello word&quot; </span><br><span class=\"line\">docker run image_name echo &quot;hello word&quot; </span><br><span class=\"line\"></span><br><span class=\"line\"># 交互式进入容器中 </span><br><span class=\"line\">docker run -i -t image_name /bin/bash </span><br><span class=\"line\"></span><br><span class=\"line\"># 在容器中安装新的程序 </span><br><span class=\"line\">docker run image_name apt-get install -y app_name</span><br><span class=\"line\"></span><br><span class=\"line\"># 在一次进刚才进入的容器</span><br><span class=\"line\">docker exec -i -t [容器ID]</span><br></pre></td></tr></table></figure>\n<p>Note： 在执行apt-get 命令的时候，要带上-y参数。如果不指定-y参数的话，apt-get命令会进入交互模式，需要用户输入命令来进行确认，但在docker环境中是无法响 应这种交互的。apt-get 命令执行完毕之后，容器就会停止，但对容器的改动不会丢失。</p>\n<h4 id=\"查看容器（ps）\">查看容器（ps）<a title=\"#查看容器（ps）\" href=\"#查看容器（ps）\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 列出当前所有正在运行的container </span><br><span class=\"line\">docker ps </span><br><span class=\"line\"></span><br><span class=\"line\"># 列出所有的container </span><br><span class=\"line\">docker ps -a </span><br><span class=\"line\"></span><br><span class=\"line\"># 列出最近一次启动的container </span><br><span class=\"line\">docker ps -l</span><br></pre></td></tr></table></figure>\n<h4 id=\"保存对容器的修改（commit）\">保存对容器的修改（commit）<a title=\"#保存对容器的修改（commit）\" href=\"#保存对容器的修改（commit）\"></a></h4>\n<p>当你对某一个容器做了修改之后（通过在容器中运行某一个命令），可以把对容器的修改保存下来，这样下次可以从保存后的最新状态运行该容器。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 保存对容器的修改; -a, --author=&quot;&quot; Author; -m, --message=&quot;&quot; Commit message </span><br><span class=\"line\">docker commit ID new_image_name</span><br></pre></td></tr></table></figure>\n<h4 id=\"对容器的操作（rm、stop、start、kill、logs、diff、top、cp、restart、attach)\">对容器的操作（rm、stop、start、kill、logs、diff、top、cp、restart、attach)<a title=\"#对容器的操作（rm、stop、start、kill、logs、diff、top、cp、restart、attach)\" href=\"#对容器的操作（rm、stop、start、kill、logs、diff、top、cp、restart、attach)\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 删除所有容器 </span><br><span class=\"line\">docker rm `docker ps -a -q` </span><br><span class=\"line\">   </span><br><span class=\"line\"># 删除单个容器; -f, --force=false; -l, --link=false Remove the specified link and not the underlying container; -v, --volumes=false Remove the volumes associated to the container </span><br><span class=\"line\">docker rm Name/ID </span><br><span class=\"line\">   </span><br><span class=\"line\"># 停止、启动、杀死一个容器 </span><br><span class=\"line\">docker stop Name/ID </span><br><span class=\"line\">docker start Name/ID </span><br><span class=\"line\">docker kill Name/ID </span><br><span class=\"line\">   </span><br><span class=\"line\"># 从一个容器中取日志; -f, --follow=false Follow log output; -t, --timestamps=false Show timestamps </span><br><span class=\"line\">docker logs Name/ID </span><br><span class=\"line\">   </span><br><span class=\"line\"># 列出一个容器里面被改变的文件或者目录，list列表会显示出三种事件，A 增加的，D 删除的，C 被改变的 </span><br><span class=\"line\">docker diff Name/ID </span><br><span class=\"line\">   </span><br><span class=\"line\"># 显示一个运行的容器里面的进程信息 </span><br><span class=\"line\">docker top Name/ID </span><br><span class=\"line\">   </span><br><span class=\"line\"># 从容器里面拷贝文件/目录到本地一个路径 </span><br><span class=\"line\">docker cp Name:/container_path to_path </span><br><span class=\"line\">docker cp ID:/container_path to_path </span><br><span class=\"line\">   </span><br><span class=\"line\"># 重启一个正在运行的容器; -t, --time=10 Number of seconds to try to stop for before killing the container, Default=10 </span><br><span class=\"line\">docker restart Name/ID </span><br><span class=\"line\">   </span><br><span class=\"line\"># 附加到一个运行的容器上面; --no-stdin=false Do not attach stdin; --sig-proxy=true Proxify all received signal to the process </span><br><span class=\"line\">docker attach ID</span><br></pre></td></tr></table></figure>\n<p>Note： attach命令允许你查看或者影响一个运行的容器。你可以在同一时间attach同一个容器。你也可以从一个容器中脱离出来，是从CTRL-C。</p>\n<h4 id=\"保存和加载镜像（save、load）\">保存和加载镜像（save、load）<a title=\"#保存和加载镜像（save、load）\" href=\"#保存和加载镜像（save、load）\"></a></h4>\n<p>当需要把一台机器上的镜像迁移到另一台机器的时候，需要保存镜像与加载镜像。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 保存镜像到一个tar包; -o, --output=&quot;&quot; Write to an file </span><br><span class=\"line\">docker save image_name -o file_path </span><br><span class=\"line\"></span><br><span class=\"line\"># 加载一个tar包格式的镜像; -i, --input=&quot;&quot; Read from a tar archive file </span><br><span class=\"line\">docker load -i file_path </span><br><span class=\"line\">   </span><br><span class=\"line\"># 机器a </span><br><span class=\"line\">docker save image_name &gt; /home/save.tar</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用scp将save.tar拷到机器b上，然后:</span><br><span class=\"line\">docker load &lt; /home/save.tar</span><br></pre></td></tr></table></figure>\n<p>8、 登录registry server（login）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 登陆registry server; -e, --email=&quot;&quot; Email; -p, --password=&quot;&quot; Password; -u, --username=&quot;&quot; Usernamedocker login</span><br></pre></td></tr></table></figure>\n<h4 id=\"发布image（push）\">发布image（push）<a title=\"#发布image（push）\" href=\"#发布image（push）\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 发布docker镜像 </span><br><span class=\"line\">docker push new_image_name</span><br></pre></td></tr></table></figure>\n<h4 id=\"根据dockerfile-构建出一个容器\">根据Dockerfile 构建出一个容器<a title=\"#根据dockerfile-构建出一个容器\" href=\"#根据dockerfile-构建出一个容器\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#build </span><br><span class=\"line\">   --no-cache=false Do not use cache when building the image </span><br><span class=\"line\">   -q, --quiet=false Suppress the verbose output generated by the containers </span><br><span class=\"line\">   --rm=true Remove intermediate containers after a successful build </span><br><span class=\"line\">   -t, --tag=&quot;&quot; Repository name (and optionally a tag) to be applied to the resulting image in case of success </span><br><span class=\"line\"></span><br><span class=\"line\">docker build -t image_name Dockerfile_path</span><br></pre></td></tr></table></figure>\n<p>其它参考：<br>\n<a href=\"https://docs.docker.com/engine/reference/run/\">https://docs.docker.com/engine/reference/run/</a><br>\n<a href=\"https://mrbird.cc/Docker-Image-Container.html\">https://mrbird.cc/Docker-Image-Container.html</a><br>\n<a href=\"http://blog.csdn.net/wsscy2004/article/details/25878363\">http://blog.csdn.net/wsscy2004/article/details/25878363</a><br>\n<a href=\"http://blog.csdn.net/iloveyin/article/details/40542431\">http://blog.csdn.net/iloveyin/article/details/40542431</a></p>\n","prev":{"title":"Git","link":"2021/06/26/认识 Git"},"plink":"http://www.crudboy.cn/2021/06/26/05.Docker命令整理/","reading_time":"1198 words in 6 min"}